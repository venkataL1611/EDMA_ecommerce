version: '3.8'

services:
  gateway:
    build:
      context: .
      dockerfile: ./services/gateway/Dockerfile
    container_name: gateway
    ports:
      - "5050:5050"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq

  inventory:
    build:
      context: .
      dockerfile: ./services/inventory/Dockerfile
    container_name: inventory
    ports:
      - "5002:5002"
    depends_on:
      - rabbitmq

  notification:
    build:
      context: .
      dockerfile: ./services/notification/Dockerfile
    container_name: notification
    ports:
      - "5003:5003"
    depends_on:
      - rabbitmq

  order:
    build:
      context: .
      dockerfile: ./services/order/Dockerfile
    container_name: order
    ports:
      - "5001:5001"
    depends_on:
      - rabbitmq
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=myecomm_pass
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432

  product:
    build:
      context: .
      dockerfile: ./services/product/Dockerfile
    container_name: product
    ports:
      - "5004:5004"
    depends_on:
      - rabbitmq

  user:
    build:
      context: .
      dockerfile: ./services/user/Dockerfile
    container_name: user
    ports:
      - "5005:5005"
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: myecomm_pass
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--maxmemory-policy", "allkeys-lru"]

volumes:
  postgres_data:

networks:
  default:
    name: backend_network